version: '2.2'

volumes:
  fcrepo:
  solr:
  db:
  redis:
  zk1:
  zkconf:

networks:
  external:
  internal:

services:
  zoo1:
    image: zookeeper
    environment:
      - ZOO_MY_ID=1
      - ZOO_SERVERS=server.1=zoo1:2888:3888
    expose:
      - 2181
      - 2888
      - 3888
    volumes:
      - zk1:/data
      - zkconf:/conf
    networks:
      internal:
       aliases:
         - zookeeper_cluster

  solr:
    image: solr
    command: solr -c -f -z zoo1:2181
    depends_on:
      - zoo1
    expose:
      - 8983
    ports:
      - 8983:8983
    volumes:
      - solr:/opt/solr/server/solr
    networks:
      internal:

  fcrepo:
    image: cbeer/fcrepo4:4.7
    expose:
      - 8080
    volumes:
      - fcrepo:/data
    environment:
      - JAVA_OPTS=${JAVA_OPTS} -Dfcrepo.modeshape.configuration="classpath:/config/file-simple/repository.json" -Dfcrepo.object.directory="/data/objects" -Dfcrepo.binary.directory="/data/binaries"
    networks:
      internal:

  postgres:
    image: postgres
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      internal:

  app:
    build: .
    image: registry.gitlab.com/notch8/doris-hyku:${TAG:-latest}
    env_file:
      - .env
      - .env.development
    environment:
      - DATABASE_URL=postgresql://postgres@postgres/postgres
      - FEDORA_URL=http://fcrepo:8080/fcrepo/rest
      - RAILS_ENV=development
      - RAILS_LOG_TO_STDOUT=true
      - RAILS_SERVE_STATIC_FILES=true
      - REDIS_HOST=redis
      - SECRET_KEY_BASE=asdf
      - SETTINGS__ACTIVE_JOB__QUEUE_ADAPTER=sidekiq
      - SETTINGS__FITS_PATH=/opt/fits/fits.sh
      - SETTINGS__MULTITENANCY__ADMIN_HOST=doris.docker
      - SETTINGS__MULTITENANCY__ADMIN_ONLY_TENANT_CREATION=false
      - SETTINGS__MULTITENANCY__DEFAULT_HOST=doris.docker
      - SETTINGS__MULTITENANCY__ENABLED=false
      - SETTINGS__SOLR__URL=http://solr:8983/solr/hyku/
      - SETTINGS__ZOOKEEPER__CONNECTION_STR=zookeeper_cluster:2181/configs
      - SOLR_URL=http://solr:8983/solr/hyku/

# version and location of fits are set in Dockerfile:
      - LD_LIBRARY_PATH=/opt/fits/tools/mediainfo/linux
    volumes:
      - .:/data/
    networks:
      internal:

  web:
    extends:
      service: app
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails server -p 3000 -b '0.0.0.0'"
    depends_on:
      - postgres
      - solr
      - fcrepo
      - redis
      - zoo1
      - db_migrate
      - initialize_app
    environment:
      - VIRTUAL_PORT=3000
      - VIRTUAL_HOST=doris.docker
    ports:
      - 3000:3000
      - 3001:3001

  workers:
    extends:
      service: app
    command: bundle exec sidekiq
    depends_on:
      - postgres
      - solr
      - fcrepo
      - redis
      - zoo1

  initialize_app:
    extends:
      service: app
    restart: on-failure
    command: bundle exec rails zookeeper:upload
    depends_on:
      - zoo1

  db_migrate:
    extends:
      service: app
    restart: on-failure
    command: bundle exec rails db:migrate
    depends_on:
      - postgres

  redis:
    image: redis:3
    command: redis-server
    volumes:
      - redis:/data
    networks:
      internal:
